{"meta":{"title":"Zou Yi's Blog","subtitle":"纵使困顿难行 亦当砥砺奋进","description":null,"author":"邹毅","url":"https://eyum.top","root":"/"},"pages":[{"title":"","date":"2020-01-13T07:44:29.948Z","updated":"2019-10-14T13:02:58.318Z","comments":true,"path":"404.html","permalink":"https://eyum.top/404.html","excerpt":"","text":"404"},{"title":"友情链接","date":"2019-10-15T14:02:43.000Z","updated":"2019-10-15T14:04:45.529Z","comments":false,"path":"friends/index.html","permalink":"https://eyum.top/friends/index.html","excerpt":"","text":"热气球公会 .post-content a{font-size: 1.5rem;}"},{"title":"categories","date":"2019-09-23T12:23:30.000Z","updated":"2019-09-23T12:44:22.492Z","comments":false,"path":"categories/index.html","permalink":"https://eyum.top/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-09-23T12:20:17.000Z","updated":"2019-09-23T12:44:22.492Z","comments":false,"path":"tags/index.html","permalink":"https://eyum.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"ftp主动被动模式详解","slug":"ftp主动被动模式详解","date":"2020-01-28T13:20:33.000Z","updated":"2020-01-28T13:20:33.636Z","comments":true,"path":"2020/01/28/ftp主动被动模式详解/","link":"","permalink":"https://eyum.top/2020/01/28/ftp主动被动模式详解/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"ftp nologin用户","slug":"ftp-nologin用户","date":"2020-01-28T13:11:03.000Z","updated":"2020-01-28T14:38:00.880Z","comments":true,"path":"2020/01/28/ftp-nologin用户/","link":"","permalink":"https://eyum.top/2020/01/28/ftp-nologin用户/","excerpt":"","text":"ftp nologin用户 环境为：vsftpd: version 3.0.2 最近需要捣鼓下FTP服务器，发现如果系统用户的登录shell设置为/sbin/nologin，就无法使用FTP服务,报错如下： ftp.png 原因是，ftp会根据/etc/shells这个文件来判断一个用户是否是有效用户，并阻止那些shell不在/etc/shells里的用户登陆。所以如果ftp用户的登录shell为/sbin/nologin,则需要添加到/etc/shells文件里面，或者可以通过禁用PAM模块，注释/etc/pam.d/vsftpd文件内的auth required pam_shells.so 另外，出于安全的考虑，root用户是不能登录ftp的，如果有这个需求的话，可以将/etc/vsftpd/ftpusers文件内的root注释","categories":[{"name":"Software","slug":"Software","permalink":"https://eyum.top/categories/Software/"}],"tags":[{"name":"ftp","slug":"ftp","permalink":"https://eyum.top/tags/ftp/"}]},{"title":"常用数学符号","slug":"常用数学符号","date":"2020-01-03T14:08:22.000Z","updated":"2020-01-03T15:57:16.985Z","comments":true,"path":"2020/01/03/常用数学符号/","link":"","permalink":"https://eyum.top/2020/01/03/常用数学符号/","excerpt":"","text":"符号 收录一些常用的数学符号的LaTeX，方便日常使用（持续更新……） 希腊字母 希腊字母小写、大写 LaTeX 希腊字母小写、大写 LaTeX $\\alpha\\ A$ \\alpha A $\\nu\\ N$ \\nu N $\\beta\\ B$ \\beta B $\\xi\\ \\Xi$ \\xi \\Xi $\\gamma\\ \\Gamma$ \\gamma \\Gamma $\\omicron\\ O$ \\omicron O $\\delta\\ \\Delta$ \\delta \\Delta $\\pi\\ \\Pi$ \\pi \\Pi $\\epsilon\\ \\varepsilon\\ E $ \\epsilon \\varepsilon E $\\rho\\ \\varrho\\ P$ \\rho \\varrho P $\\zeta\\ Z$ \\zeta Z $\\sigma\\ \\Sigma$ \\sigma \\Sigma $\\eta\\ H $ \\eta H $\\tau\\ T$ \\tau T $\\theta\\ \\vartheta\\ \\Theta$ \\theta \\vartheta \\Theta $\\upsilon\\ \\Upsilon$ \\upsilon \\Upsilon $\\iota\\ I $ \\iota I $\\phi\\ \\varphi\\ \\Phi$ \\phi \\varphi \\Phi $\\kappa\\ K$ \\kappa K $\\chi\\ x\\ X$ \\chi x X $\\lambda\\ \\Lambda$ \\lambda \\Lambda $\\psi\\ \\Psi$ \\psi \\Psi $\\mu\\ M $ \\mu M $\\omega\\ \\Omega$ \\omega \\Omega 注：\\mit\\Gamma 表斜体 $\\mit\\Gamma$ 数和数组 符号 LaTeX 概念 符号 LaTeX 概念 $a$ a 标量（整数或实数） $e^{(i)}$ e^{(i)} 标准基向量[0,…,0,1,0,…,0]，其中索引 $i$ 处值为1 $\\boldsymbol{a}$ \\boldsymbol{a} 向量 ${\\rm diag}(a)$ {\\rm diag}(a) 对角方阵，其中对角元素由 $a$ 给定 $A$ A 矩阵 $\\rm{a}$ \\rm{a} 标量随机变量 $\\rm{\\textbf{A}}$ \\rm{\\textbf{A}} 张量 $\\textbf{a}$ \\textbf{a} 向量随机变量 $I_n$ I_n $n$ 行 $n$ 列的单位矩阵 $\\rm{A}$ \\rm{A} 矩阵随机变量 $I$ I 维度蕴含于上下文的单位矩阵 代数","categories":[{"name":"Paper","slug":"Paper","permalink":"https://eyum.top/categories/Paper/"}],"tags":[{"name":"LaTeX","slug":"LaTeX","permalink":"https://eyum.top/tags/LaTeX/"}]},{"title":"机器学习中的数学","slug":"机器学习中的数学","date":"2020-01-03T04:56:23.000Z","updated":"2020-01-08T06:21:29.739Z","comments":true,"path":"2020/01/03/机器学习中的数学/","link":"","permalink":"https://eyum.top/2020/01/03/机器学习中的数学/","excerpt":"","text":"机器学习中的数学 平方误差 梯度下降法 矩阵求解 极大似然估计 熵的原理 启发式算法 平方误差误差，指的是某个变量的错误程度，直白来说，误差就是“真实值-预测值”。那么，平方误差通过计算每一个样本误差的平方，再求和。即平方误差的公式是 $L=\\sum_{i=1}^{N}(\\hat{y}_{i}-y_{i})^{2}$。其中，$\\hat{y}_{i}$ 为第 $i$ 个样本的真实值，$y_{i}$ 为第 $i$ 个样本的预测值。 梯度下降法机器学习中的所有算法都依赖于最小化或最大化某一个函数，我们称之为“目标函数”。最小化的这组函数被称为“损失函数”。损失函数是衡量预测模型预测期望结果表现的指标。寻找函数最小值的最常用方法是“梯度下降”。把损失函数想象成起伏的山脉，梯度下降就像从山顶滑下，目的是到达山脉的最低点。关于求解极小值问题，我们常用的方法是代数法和求导法： 代数法：$y=x^{2}+2x+3$ 可以化为 $y=(x+1)^{2}+2$，那么其最小值 $x$ = -1时取到。 求导法：令 $y=x^{2}+2x+3$ 的导数：$\\frac{\\mathrm{d}y}{\\mathrm{d}x}=2x+2=0$。解得 $x$ = -1时 $y$ 取得最小值。 但是，求解函数$y=x^{2}+2x+e^{x}+3$的极小值时，代数法和求导法都不再适用，此时就需要用更通用的极值求解方法，这就是梯度下降法。首先，梯度 (gradient) 是一阶偏导组成的向量，其表示函数变化率最快的方向，是相对于一个向量求导的导数： $f$ 的梯度是包含所有偏导数的向量，记为 ${\\nabla}_{x}f(x)$。梯度的第 $i$ 个元素是 $f$ 关于 $x_i$ 的偏导数。在多维情况下，临界点是梯度中的所有元素都为 $0$ 的点。在 $u$(单位向量)方向的方向导数 (directional derivative) 是函数 $f$ 在 $u$ 方向的斜率。换句话说，方向导数是函数 $f(x+{\\alpha}u)$ 关于 $\\alpha$ 的导数（在 $\\alpha$ = 0 时取到）。使用链式法则，我们可以看到当 $\\alpha$ = 0 时，$\\frac{\\partial}{\\partial \\alpha}f(x+{\\alpha}u)=u^\\top{\\nabla}_{x}f(x)$。为了最小化 $f$,我们希望找到使 $f$ 下降得最快的方向。计算方向导数为：$$\\min_{u,u^\\top u=1}u^\\top{\\nabla}_{x}f(x)$$$$=\\min_{u,u^\\top u=1}\\left|\\left|u\\right|\\right|_2 \\left|\\left|{\\nabla}_{x}f(x)\\right|\\right|_2 \\cos \\theta$$其中 $\\theta$ 是 $u$ 与梯度的夹角。将 $ \\left|\\left|u\\right|\\right|_2 =1$ 带入，并忽略与 $u$ 无关的项，就能简化得到 $\\min_u \\cos \\theta$。这在 $u$ 与梯度方向相反时取得最小。换句话说，梯度向量指向上坡，负梯度向量指向下坡。我们在负梯度方向上移动可以减小 $f$。这就是梯度下降法(gradient descent)，也称最速下降法(method of steepest descent)。最速下降法建议新的点为$$x’=x-\\epsilon{\\nabla}_{x}f(x)$$其中 $\\epsilon$ 为学习率(learning rate)，是一个确定步长大小的正标量。我们可以通过几种不同的方式选择 $\\epsilon$。普遍的方式是选择一个小常数。有时我们通过计算，选择使方向导数消失的步长。还有一种方法是根据几个 $\\epsilon$ 计算 $f(x-\\epsilon{\\nabla}_{x}f(x))$,并选择其中能产生最小目标函数值的 $\\epsilon$。这种策略是线搜索。回到上面的题，求 $y=x^{2}+2x+e^{x}+3$ 的最小值。首先我们先随机初始化一个点 $x_0=0$ ，设置学习率 $\\epsilon=0.3$,其次，计算梯度 ${\\nabla}_{x}f(x)=\\frac{\\mathrm{d}y}{\\mathrm{d}x}=2x+2+e^x$。之后的计算交给MATLAB，代码如下： 12345678910111213x = 0.0; %初始化值c = 0.5; %设置学习率fprintf(&apos;n\\t\\t更新前的点\\t\\t梯度\\t\\t更新后的点\\n&apos;);for n = 1 : 10 xold = x; %本次循环前的 xt 值 grad = 2*x+2+exp(x); %梯度 xnew = x - c*grad; %梯度下降法更新后的点 fprintf(&apos;%d\\t\\t%6.2f\\t\\t%6.2f\\t\\t%6.2f\\n&apos;,n,xold,grad,xnew); x = xnew;end 得到结果如下： n 更新前的点 梯度 更新后的点 1 0.00 3.00 -1.50 2 -1.50 -0.78 -1.11 3 -1.11 -0.11 -1.16 4 -1.16 -0.02 -1.16 5 -1.16 -0.00 -1.16 6 -1.16 -0.00 -1.16 7 -1.16 -0.00 -1.16 8 -1.16 -0.00 -1.16 9 -1.16 -0.00 -1.16 10 -1.16 -0.00 -1.16 从上表中可以看到，在第4次循环后，$x’$ 的值不再改变，收敛于 $x=-1.16$，即，当 $x=-1.16$ 时，y取得最小值为 $y_{min}=(-1.16)^2+2*(-1.16)+e^{-1.16}+3=2.33908$ 矩阵求解(待更新)极大似然估计熵的原理启发式算法","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://eyum.top/categories/Algorithm/"}],"tags":[{"name":"Machine learning","slug":"Machine-learning","permalink":"https://eyum.top/tags/Machine-learning/"},{"name":"Math","slug":"Math","permalink":"https://eyum.top/tags/Math/"},{"name":"Deep learning","slug":"Deep-learning","permalink":"https://eyum.top/tags/Deep-learning/"}]},{"title":"Android-action","slug":"Android-action","date":"2019-10-16T14:40:39.000Z","updated":"2019-10-16T14:41:19.529Z","comments":true,"path":"2019/10/16/Android-action/","link":"","permalink":"https://eyum.top/2019/10/16/Android-action/","excerpt":"","text":"编写一个MainActivity和MyService，在MainActivity中的onCreate()函数中为两个按钮分别设置点击事件监听器，点击第一个按钮启动服务弹出一个Toast显示“您点击了第一个按钮”，点击第二个按钮启动服务弹出一个Toast显示“您点击了第二个按钮”。（以action区分不同的动作） MainActivity.java 1234567891011121314151617181920212223242526public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); final Button button1 = findViewById(R.id.button1); Button button2 = findViewById(R.id.button2); button1.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; Intent intent = new Intent(MainActivity.this, MyService.class); intent.setAction(&quot;ACTION_BUTTON_1&quot;); startService(intent); &#125; &#125;); button2.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; Intent intent = new Intent(MainActivity.this, MyService.class); intent.setAction(&quot;ACTION_BUTTON_2&quot;); startService(intent); &#125; &#125;); &#125;&#125; MyService.java 1234567891011121314151617181920public class MyService extends Service &#123; public MyService() &#123; &#125; @Override public IBinder onBind(Intent intent) &#123; throw new UnsupportedOperationException(&quot;Not yet implemented&quot;); &#125; @Override public int onStartCommand(Intent intent, int flags, int startId) &#123; String intentAction = intent.getAction(); if (intentAction.equals(&quot;ACTION_BUTTON_1&quot;)) &#123; Toast.makeText(this, &quot;您点击了第一个按钮&quot;, Toast.LENGTH_LONG).show(); &#125; else if (intentAction.equals(&quot;ACTION_BUTTON_2&quot;)) &#123; Toast.makeText(this, &quot;您点击了第二个按钮&quot;, Toast.LENGTH_LONG).show(); &#125; return super.onStartCommand(intent, flags, startId); &#125;&#125;","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"https://eyum.top/tags/Android/"}]},{"title":"Desktop icons don't appear","slug":"Desktop-icons-don-t-appear","date":"2019-10-12T14:59:22.000Z","updated":"2020-01-28T12:55:40.105Z","comments":true,"path":"2019/10/12/Desktop-icons-don-t-appear/","link":"","permalink":"https://eyum.top/2019/10/12/Desktop-icons-don-t-appear/","excerpt":"","text":"Debian 10 无桌面图标 (PS : 本文嵌入了一段 YouTube 视频，自行科学上网)环境如下:OS : Debian 10GNOME : 3.30.2 Debian 10 刚安装完后是这样的，未显示桌面图标：![Debian 10.png](Debian 10.png)最终在这篇文章中找到了原因：原文链接 No-desktop-icons.png 具体原因为，之前 GNOME 的 Desktop 是由 Nautilus 管理的，而现在开发者不维护了。在 YouTube 上找到了解决方案：视频链接 可以通过 Firefox 插件来解决，如下图： Applications-Menu.png Debian-10.png","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://eyum.top/tags/Linux/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-09-23T12:44:22.000Z","updated":"2020-01-28T13:02:30.806Z","comments":true,"path":"2019/09/23/hello-world/","link":"","permalink":"https://eyum.top/2019/09/23/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}